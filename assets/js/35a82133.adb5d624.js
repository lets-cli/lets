"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[83],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return d}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),m=p(t),d=a,f=m["".concat(c,".").concat(d)]||m[d]||u[d]||i;return t?r.createElement(f,l(l({ref:n},s),{},{components:t})):r.createElement(f,l({ref:n},s))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var c in n)hasOwnProperty.call(n,c)&&(o[c]=n[c]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},5791:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return c},default:function(){return d},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return u}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),l=["components"],o={id:"env",title:"Lets environment"},c=void 0,p={unversionedId:"env",id:"env",title:"Lets environment",description:"Default environment variables",source:"@site/docs/env.md",sourceDirName:".",slug:"/env",permalink:"/docs/env",draft:!1,editUrl:"https://github.com/lets-cli/lets/edit/master/docs/docs/env.md",tags:[],version:"current",frontMatter:{id:"env",title:"Lets environment"},sidebar:"someSidebar",previous:{title:"Lets cli",permalink:"/docs/cli"},next:{title:"Examples",permalink:"/docs/examples"}},s={},u=[{value:"Default environment variables",id:"default-environment-variables",level:3},{value:"Override command env with -E flag",id:"override-command-env-with--e-flag",level:3}],m={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"default-environment-variables"},"Default environment variables"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"lets")," has builtin environ variables."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LETS_DEBUG")," - enable debug messages"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LETS_CONFIG")," - changes default ",(0,i.kt)("inlineCode",{parentName:"li"},"lets.yaml")," file path (e.g. LETS_CONFIG=lets.my.yaml)"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LETS_CONFIG_DIR")," - changes path to dir where ",(0,i.kt)("inlineCode",{parentName:"li"},"lets.yaml")," file placed"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"NO_COLOR")," - disables colored output. See ",(0,i.kt)("a",{parentName:"li",href:"https://no-color.org/"},"https://no-color.org/")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LETS_COMMAND_NAME")," - string name of launched command"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"LETS_COMMAND_ARGS")," - positional arguments for launched command, e.g. for ",(0,i.kt)("inlineCode",{parentName:"li"},"lets run --debug --config=test.ini")," it will contain ",(0,i.kt)("inlineCode",{parentName:"li"},"--debug --config=test.ini"))),(0,i.kt)("h3",{id:"override-command-env-with--e-flag"},"Override command env with -E flag"),(0,i.kt)("p",null,"You can override environment for command with ",(0,i.kt)("inlineCode",{parentName:"p"},"-E")," flag:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"shell: bash\n\ncommands:\n  say:\n    env:\n      NAME: Rick\n    cmd: echo Hello ${NAME}\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"lets say"))," - prints ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello Rick")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"lets -E NAME=Morty say"))," - prints ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello Morty")),(0,i.kt)("p",null,"Alternatively:"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"lets --env NAME=Morty say"))," - prints ",(0,i.kt)("inlineCode",{parentName:"p"},"Hello Morty")))}d.isMDXComponent=!0}}]);