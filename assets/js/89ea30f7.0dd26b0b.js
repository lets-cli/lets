"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[593],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=a,k=d["".concat(s,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(k,i(i({ref:t},c),{},{components:n})):r.createElement(k,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2267:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),i=["components"],l={id:"what_is_lets",title:"What is lets ?",sidebar_label:"What is lets ?",slug:"/"},s=void 0,u={unversionedId:"what_is_lets",id:"what_is_lets",title:"What is lets ?",description:"Introduction",source:"@site/docs/what_is_lets.md",sourceDirName:".",slug:"/",permalink:"/docs/",draft:!1,editUrl:"https://github.com/lets-cli/lets/edit/master/docs/docs/what_is_lets.md",tags:[],version:"current",frontMatter:{id:"what_is_lets",title:"What is lets ?",sidebar_label:"What is lets ?",slug:"/"},sidebar:"mySidebar",next:{title:"Installation",permalink:"/docs/installation"}},c={},p=[{value:"Introduction",id:"introduction",level:3},{value:"Why yet another task runner ?",id:"why-yet-another-task-runner-",level:3},{value:"Features",id:"features",level:3}],d={toc:p};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"introduction"},"Introduction"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Lets")," is a task runner."),(0,o.kt)("p",null,"You can think of it as a tool with a config where you can write tasks."),(0,o.kt)("p",null,"The task is usually your set of cli commands which you want to group together and gave it a name."),(0,o.kt)("p",null,"For example, if you want to run tests in your project you may need to run next commands:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'# spinup a database for tests\ndocker-compose up postgres\n# apply database migrations\ndocker-compose run --rm sql alembic upgrdade head\n# run some tets\ndocker-compose run --rm app pytest -x "test_login"\n')),(0,o.kt)("p",null,"This all can be represented in one task - for example ",(0,o.kt)("inlineCode",{parentName:"p"},"lets test")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'command:\n  test:\n    description: Run integration tests\n    cmd: |\n      docker-compose up postgres\n      docker-compose run --rm sql alembic upgrdade head\n      docker-compose run --rm app pytest -x "test_login"\n')),(0,o.kt)("p",null,"And execute - ",(0,o.kt)("inlineCode",{parentName:"p"},"lets test"),". Now everyone in you team knows how to run tests."),(0,o.kt)("h3",{id:"why-yet-another-task-runner-"},"Why yet another task runner ?"),(0,o.kt)("p",null,"So is there are any of such tools out there ?"),(0,o.kt)("p",null,"Well, sure there are some."),(0,o.kt)("p",null,"Many developers know such a tool called ",(0,o.kt)("inlineCode",{parentName:"p"},"make"),"."),(0,o.kt)("p",null,"So why not ",(0,o.kt)("inlineCode",{parentName:"p"},"make")," ?"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"make")," is more like a build tool and was not intended to be used as a task runner (but usually used because of the lack of alternatives or because it is install on basicaly every developer's machine)."),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"make")," has some sort of things which are bad/hard/no convinient for developers which use task runners on a daily basis."),(0,o.kt)("p",null,"Lets is a brand new task runner with a task-centric philosophy and created specifically to meet developers needs."),(0,o.kt)("h3",{id:"features"},"Features"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"yaml config")," - human-readable, recognizable and convenient format for such configs (also used by kubernetes, ansible, and many others)"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"arguments parsing")," - using ",(0,o.kt)("a",{parentName:"li",href:"http://docopt.org"},"http://docopt.org")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"global and per/command env")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"global and per/command dynamic env")," - can be computed at runtime"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"checksum")," - a feature which helps to track file changes"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"written in Go")," - which means it is easy to read, write and test as well as contributing to project")),(0,o.kt)("p",null,"To see all features, ",(0,o.kt)("a",{parentName:"p",href:"/docs/config"},"check out config documentation")))}m.isMDXComponent=!0}}]);