(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{112:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=a.a.createContext({}),u=function(e){var t=a.a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=u(e.components);return a.a.createElement(s.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),p=u(n),d=r,m=p["".concat(i,".").concat(d)]||p[d]||b[d]||o;return n?a.a.createElement(m,c(c({ref:t},s),{},{components:n})):a.a.createElement(m,c({ref:t},s))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var s=2;s<o;s++)i[s]=n[s];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return u}));var r=n(3),a=n(7),o=(n(0),n(112)),i={id:"what_is_lets",title:"What is lets ?",sidebar_label:"What is lets ?",slug:"/"},c={unversionedId:"what_is_lets",id:"what_is_lets",isDocsHomePage:!1,title:"What is lets ?",description:"Introduction",source:"@site/docs/what_is_lets.md",slug:"/",permalink:"/docs/",editUrl:"https://github.com/lets-cli/lets/edit/master/docs/docs/what_is_lets.md",version:"current",sidebar_label:"What is lets ?",sidebar:"someSidebar",next:{title:"Installation",permalink:"/docs/installation"}},l=[{value:"Introduction",id:"introduction",children:[]},{value:"Why yet another task runner ?",id:"why-yet-another-task-runner-",children:[]},{value:"Features",id:"features",children:[]}],s={toc:l};function u(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h3",{id:"introduction"},"Introduction"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"Lets")," is a task runner."),Object(o.b)("p",null,"You can think of it as a tool with a config where you can write tasks."),Object(o.b)("p",null,"The task is usually your set of cli commands which you want to group together and gave it a name."),Object(o.b)("p",null,"For example, if you want to run tests in your project you may need to run next commands:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},'# spinup a database for tests\ndocker-compose up postgres\n# apply database migrations\ndocker-compose run --rm sql alembic upgrdade head\n# run some tets\ndocker-compose run --rm app pytest -x "test_login"\n')),Object(o.b)("p",null,"This all can be represented in one task - for example ",Object(o.b)("inlineCode",{parentName:"p"},"lets test")),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-yaml"},'command:\n  test:\n    description: Run integration tests\n    cmd: |\n      docker-compose up postgres\n      docker-compose run --rm sql alembic upgrdade head\n      docker-compose run --rm app pytest -x "test_login"\n')),Object(o.b)("p",null,"And execute - ",Object(o.b)("inlineCode",{parentName:"p"},"lets test"),". Now everyone in you team knows how to run tests."),Object(o.b)("h3",{id:"why-yet-another-task-runner-"},"Why yet another task runner ?"),Object(o.b)("p",null,"So is there are any of such tools out there ?"),Object(o.b)("p",null,"Well, sure there are some."),Object(o.b)("p",null,"Many developers know such a tool called ",Object(o.b)("inlineCode",{parentName:"p"},"make"),"."),Object(o.b)("p",null,"So why not ",Object(o.b)("inlineCode",{parentName:"p"},"make")," ?"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"make")," is more like a build tool and was not intended to be used as a task runner (but usually used because of the lack of alternatives or because it is install on basicaly every developer's machine)."),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"make")," has some sort of things which are bad/hard/no convinient for developers which use task runners on a daily basis."),Object(o.b)("p",null,"Lets is a brand new task runner with a task-centric philosophy and created specifically to meet developers needs."),Object(o.b)("h3",{id:"features"},"Features"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"yaml config")," - human-readable, recognizable and convenient format for such configs (also used by kubernetes, ansible, and many others)"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"arguments parsing")," - using ",Object(o.b)("a",{parentName:"li",href:"http://docopt.org"},"http://docopt.org")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"global and per/command env")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"global and per/command dynamic env")," - can be computed at runtime"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"checksum")," - a feature which helps to track file changes"),Object(o.b)("li",{parentName:"ul"},Object(o.b)("inlineCode",{parentName:"li"},"written in Go")," - which means it is easy to read, write and test as well as contributing to project")),Object(o.b)("p",null,"To see all features, ",Object(o.b)("a",{parentName:"p",href:"/docs/config"},"check out config documentation")))}u.isMDXComponent=!0}}]);