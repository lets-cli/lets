(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{106:function(e,n,t){"use strict";t.d(n,"a",(function(){return s})),t.d(n,"b",(function(){return d}));var r=t(0),a=t.n(r);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var b=a.a.createContext({}),p=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=p(e.components);return a.a.createElement(b.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},u=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,b=c(e,["components","mdxType","originalType","parentName"]),s=p(t),u=r,d=s["".concat(o,".").concat(u)]||s[u]||m[u]||i;return t?a.a.createElement(d,l(l({ref:n},b),{},{components:t})):a.a.createElement(d,l({ref:n},b))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var b=2;b<i;b++)o[b]=t[b];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},78:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return l})),t.d(n,"toc",(function(){return c})),t.d(n,"default",(function(){return p}));var r=t(3),a=t(7),i=(t(0),t(106)),o={id:"env",title:"Lets environment"},l={unversionedId:"env",id:"env",isDocsHomePage:!1,title:"Lets environment",description:"Default environment variables",source:"@site/docs/env.md",slug:"/env",permalink:"/docs/env",editUrl:"https://github.com/lets-cli/lets/edit/master/docs/docs/env.md",version:"current",sidebar:"someSidebar",previous:{title:"Config reference",permalink:"/docs/config"},next:{title:"Examples",permalink:"/docs/examples"}},c=[{value:"Default environment variables",id:"default-environment-variables",children:[]},{value:"Override command env with -E flag",id:"override-command-env-with--e-flag",children:[]}],b={toc:c};function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("h3",{id:"default-environment-variables"},"Default environment variables"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"lets")," has builtin environ variables."),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LETS_DEBUG")," - enable debug messages"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LETS_CONFIG")," - changes default ",Object(i.b)("inlineCode",{parentName:"li"},"lets.yaml")," file path (e.g. LETS_CONFIG=lets.my.yaml)"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LETS_CONFIG_DIR")," - changes path to dir where ",Object(i.b)("inlineCode",{parentName:"li"},"lets.yaml")," file placed"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"NO_COLOR")," - disables colored output. See ",Object(i.b)("a",{parentName:"li",href:"https://no-color.org/"},"https://no-color.org/")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LETS_COMMAND_NAME")," - string name of launched command"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"LETS_COMMAND_ARGS")," - positional arguments for launched command, e.g. for ",Object(i.b)("inlineCode",{parentName:"li"},"lets run --debug --config=test.ini")," it will contain ",Object(i.b)("inlineCode",{parentName:"li"},"--debug --config=test.ini"))),Object(i.b)("h3",{id:"override-command-env-with--e-flag"},"Override command env with -E flag"),Object(i.b)("p",null,"You can override environment for command with ",Object(i.b)("inlineCode",{parentName:"p"},"-E")," flag:"),Object(i.b)("pre",null,Object(i.b)("code",{parentName:"pre",className:"language-yaml"},"shell: bash\n\ncommands:\n  say:\n    env:\n      NAME: Rick\n    cmd: echo Hello ${NAME}\n")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"lets say"))," - prints ",Object(i.b)("inlineCode",{parentName:"p"},"Hello Rick")),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"lets -E NAME=Morty say"))," - prints ",Object(i.b)("inlineCode",{parentName:"p"},"Hello Morty")),Object(i.b)("p",null,"Alternatively:"),Object(i.b)("p",null,Object(i.b)("strong",{parentName:"p"},Object(i.b)("inlineCode",{parentName:"strong"},"lets --env NAME=Morty say"))," - prints ",Object(i.b)("inlineCode",{parentName:"p"},"Hello Morty")))}p.isMDXComponent=!0}}]);